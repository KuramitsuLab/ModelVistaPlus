[
    {
        "tag": "属性の重複リスク",
        "question": "この図において「学生数」という属性が親クラスと子クラスの両方に存在している。この設計から生じる最も重大なリスクはどれか。",
        "choice": [
            "親クラスの学生数と子クラスの学生数の関係性が不明確で、データの整合性を保証できない",
            "属性名が重複しているため、必ずコンパイルエラーが発生する",
            "メモリ使用量が2倍になり、システムのパフォーマンスが著しく低下する",
            "オブジェクト指向の原則に違反しており、この設計は実装不可能である"
        ],
        "authored_by": "claude",
        "is_translated": false
    },
    {
        "tag": "メソッドの重複と実装意図",
        "question": "「授業料を計算する」メソッドが親クラスと両方の子クラスに定義されている。この設計から読み取れる実装上の課題はどれか。",
        "choice": [
            "子クラスのメソッドが親クラスのメソッドをオーバーライドするのか、独立したメソッドなのかが不明確で、実装方針を決定できない",
            "同じ名前のメソッドが複数存在するため、必ずランタイムエラーが発生する",
            "メソッド名が日本語であるため、すべてのプログラミング言語で実装できない",
            "3つのメソッドが必ず同じ結果を返さなければならず、実装の自由度がない"
        ],
        "authored_by": "claude",
        "is_translated": false
    },
    {
        "tag": "割合属性の整合性",
        "question": "「州内学生の割合」と「州外学生の割合」という属性が各子クラスに存在する。この設計における検証上の課題はどれか。",
        "choice": [
            "2つの割合の合計が100%になるべきかなど、割合間の整合性制約が不明で、データの妥当性を検証できない",
            "割合を表す属性は必ず親クラスに定義しなければならないため、この設計は誤りである",
            "割合は小数で表現すべきであり、パーセント表記は使用できない",
            "割合を計算するメソッドが定義されていないため、この属性は使用できない"
        ],
        "authored_by": "claude",
        "is_translated": false
    },
    {
        "tag": "授業料計算の仕様不足",
        "question": "この図において「授業料を計算する」メソッドが定義されているが、実装するために不足している情報はどれか。",
        "choice": [
            "計算に使用する入力パラメータ、計算式、戻り値の型、州内学生と州外学生での計算ロジックの違いが不明",
            "メソッドの実行権限とアクセス修飾子が記載されていない",
            "メソッドが呼び出されるタイミングとイベントハンドラが定義されていない",
            "データベースに保存するテーブル名とカラム名が指定されていない"
        ],
        "authored_by": "claude",
        "is_translated": false
    },
    {
        "tag": "単位時間属性の役割",
        "question": "親クラスの「単位時間」属性と「授業料を計算する」メソッドの関係について、この図から読み取れる問題はどれか。",
        "choice": [
            "単位時間が授業料計算にどのように使用されるのか、計算式における役割が不明である",
            "単位時間は必ず子クラスにも定義しなければならないため、設計に誤りがある",
            "単位時間という属性名が曖昧で、必ず「時間」に変更しなければならない",
            "単位時間は数値型であるべきだが、図からは文字列型であることが読み取れる"
        ],
        "authored_by": "claude",
        "is_translated": false
    },
    {
        "tag": "継承関係の設計意図",
        "question": "「学生」を親クラス、「州内学生」と「州外学生」を子クラスとする継承関係が示されている。この設計における機能要求として正しいものはどれか。",
        "choice": [
            "システムは学生を州内学生と州外学生の2種類に分類し、それぞれ異なる授業料計算を行う必要がある",
            "州内学生と州外学生は必ず同じ授業料計算式を使用しなければならない",
            "学生クラスは抽象クラスとして実装してはならず、必ずインスタンス化可能でなければならない",
            "州内学生と州外学生以外の学生タイプを将来追加することは設計上不可能である"
        ],
        "authored_by": "claude",
        "is_translated": false
    },
    {
        "tag": "子クラス固有属性の役割",
        "question": "子クラスに定義されている「州内学生の割合」「州外学生の割合」という属性について、この図から読み取れる設計上の不明点はどれか。",
        "choice": [
            "これらの割合が授業料計算にどのように関与するのか、計算ロジックとの関係性が不明である",
            "割合属性は必ずパーセント表記でなければならず、小数表記は許可されない",
            "この割合は必ず親クラスから継承しなければならないため、設計に誤りがある",
            "割合属性は必ず読み取り専用でなければならず、更新することはできない"
        ],
        "authored_by": "claude",
        "is_translated": false
    },
    {
        "tag": "データ整合性の検証",
        "question": "この図で定義されている属性間の関係について、システムの正しさを検証する際に不足している情報はどれか。",
        "choice": [
            "親クラスの学生数と子クラスの学生数の合計関係、割合の計算方法と検証ルールが不明である",
            "各属性のデータベース上の物理的な格納場所が指定されていない",
            "属性値の暗号化方式とセキュリティレベルが定義されていない",
            "属性値の画面表示時のフォーマットとUI配置が決定されていない"
        ],
        "authored_by": "claude",
        "is_translated": false
    },
    {
        "tag": "クラス設計の拡張性",
        "question": "この図の継承構造において、将来「留学生」という新しい学生タイプを追加する場合に必要となる情報のうち、現在の図から読み取れないものはどれか。",
        "choice": [
            "新しい学生タイプが持つべき固有の属性、授業料計算ロジックの違い、既存の割合計算への影響が不明である",
            "留学生クラスを追加するためには、必ず既存のクラスをすべて削除しなければならない",
            "継承の深さは2階層までに制限されているため、留学生クラスは追加できない",
            "図の形式上、子クラスは2つまでしか定義できないため、拡張は不可能である"
        ],
        "authored_by": "claude",
        "is_translated": false
    },
    {
        "tag": "授業料計算の差異",
        "question": "州内学生と州外学生で「授業料を計算する」メソッドがそれぞれ定義されている。この設計から推測される機能要求として最も適切なものはどれか。",
        "choice": [
            "州内学生と州外学生では異なる授業料計算ロジックが必要であり、それぞれ独自の計算式を実装する必要がある",
            "両クラスのメソッドは必ず同じ結果を返さなければならず、計算ロジックに違いがあってはならない",
            "州内学生の授業料は必ず州外学生より安くなければならないという制約がある",
            "授業料計算は必ず親クラスのメソッドだけを使用し、子クラスでは再定義してはならない"
        ],
        "authored_by": "claude",
        "is_translated": false
    }
]