[
    {
        "tag": "図種類",
        "question": "この図の種類は何ですか？",
        "answer": "ユースケース図",
        "choice": [
            "ユースケース図",
            "クラス図",
            "シーケンス図",
            "アクティビティ図"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "計数 アクター",
        "question": "この図に登場するアクター（外部システムを除く）の数は？",
        "answer": "5",
        "choice": [
            "5",
            "7",
            "3",
            "9"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "計数 外部システム",
        "question": "この図に含まれる外部システムアクターの数は？",
        "answer": "4",
        "choice": [
            "4",
            "1",
            "3",
            "5"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "計数 パッケージ",
        "question": "システムはいくつの主要パッケージに分類されていますか？",
        "answer": "6",
        "choice": [
            "6",
            "4",
            "5",
            "7"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "記法理解",
        "question": "「コードをプッシュ」と「自動ビルド実行」の関係を表すUML関係は？",
        "answer": "include",
        "choice": [
            "include",
            "extend",
            "generalization",
            "association"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "記法理解",
        "question": "「自動ビルド実行」と「コードカバレッジ測定」の関係を表すUML関係は？",
        "answer": "extend",
        "choice": [
            "include",
            "extend",
            "generalization",
            "dependency"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "記法理解",
        "question": "「カナリアデプロイ実行」と「本番環境デプロイ」の関係を表すUML関係は？",
        "answer": "generalization",
        "choice": [
            "include",
            "extend",
            "generalization",
            "aggregation"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "探索 アクター",
        "question": "「シークレット管理」ユースケースにアクセスできるセキュリティ監査者以外のアクターは？",
        "answer": "DevOpsエンジニア",
        "choice": [
            "DevOpsエンジニア",
            "セキュリティ監査者",
            "QAエンジニア",
            "プロダクトオーナー"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "探索 アクター",
        "question": "本番環境デプロイの承認に必要なアクターはセキュリティ監査者と誰？",
        "answer": "プロダクトオーナー",
        "choice": [
            "プロダクトオーナー",
            "DevOpsエンジニア",
            "QAエンジニア",
            "セキュリティ監査者"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "探索 ユースケース",
        "question": "「E2Eテスト実行」の前提となるテストは何ですか？",
        "answer": "統合テスト実行",
        "choice": [
            "単体テスト実行",
            "統合テスト実行",
            "パフォーマンステスト実行",
            "静的コード解析"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "探索 ユースケース",
        "question": "「品質ゲート評価」が依存するユースケースは脆弱性スキャンと何ですか？",
        "answer": "コードカバレッジ測定",
        "choice": [
            "コードカバレッジ測定",
            "静的コード解析",
            "ライセンスチェック",
            "失敗通知受信"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "探索 ユースケース",
        "question": "「本番環境デプロイ」が必須で依存するユースケースはデプロイ承認管理とどれですか？",
        "answer": "ビルドアーティファクト管理",
        "choice": [
            "ビルドアーティファクト管理",
            "自動ビルド実行のみ",
            "デプロイ承認管理",
            "ステージング環境デプロイ"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "探索 アクター",
        "question": "「失敗通知受信」ユースケースと連携する外部システムはどれですか？",
        "answer": "Slackボット",
        "choice": [
            "Slackボット",
            "GitHubWebhook",
            "コンテナレジストリ",
            "Kubernetesクラスタ"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "探索 アクター",
        "question": "最も多くのユースケースに関与しているアクターは？",
        "answer": "DevOpsエンジニア",
        "choice": [
            "DevOpsエンジニア",
            "プロダクトオーナー",
            "QAエンジニア",
            "セキュリティ監査者"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "計数 ユースケース",
        "question": "「ビルド・テスト」パッケージに含まれるユースケースの数は？",
        "answer": "7",
        "choice": [
            "7",
            "5",
            "6",
            "8"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "探索 ユースケース",
        "question": "セキュリティ監査者が関与する品質管理系のユースケースはどれですか？",
        "choice": [
            "静的コード解析のみ",
            "脆弱性スキャンのみ",
            "脆弱性スキャン、ライセンスチェック、品質ゲート評価",
            "全ての品質管理ユースケース"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "計数 ユースケース",
        "question": "図中に示されているデプロイ戦略（本番環境デプロイを含む）はいくつありますか？",
        "answer": "4",
        "choice": [
            "4",
            "2",
            "3",
            "5"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "探索 ユースケース",
        "question": "「自動ビルド実行」が必須で実行する処理は単体テストとどれですか？",
        "answer": "静的コード解析",
        "choice": [
            "静的コード解析",
            "単体テスト実行",
            "脆弱性スキャン",
            "全てのテスト"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "計数 ユースケース",
        "question": "「監視・通知」パッケージに含まれるユースケースの数は？",
        "answer": "5",
        "choice": [
            "5",
            "3",
            "4",
            "6"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "探索 ユースケース",
        "question": "Kubernetesクラスタと連携するユースケースは本番環境デプロイとどれですか？",
        "answer": "ロールバック実行",
        "choice": [
            "ロールバック実行",
            "ステージング環境デプロイ",
            "ブルーグリーンデプロイ実行",
            "カナリアデプロイ実行"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "理由",
        "question": "「ステージング環境デプロイ」が「本番環境デプロイ」に対してgeneralization関係にある理由として最も適切なものはどれですか？",
        "choice": [
            "ステージング環境デプロイは本番環境デプロイの特殊化であり、本番デプロイの基本的な振る舞いを継承しつつ、承認要件が緩和されているため",
            "ステージング環境デプロイは本番環境デプロイの前提条件だから",
            "両者は同じパッケージに属しているから",
            "ステージング環境デプロイは本番環境デプロイのオプション機能だから"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "依存関係分析",
        "question": "「コードをプッシュ」から「品質ゲート評価」まで到達するために経由する必須のユースケースとして正しいものはどれですか？",
        "choice": [
            "コードをプッシュ → 自動ビルド実行 → 単体テスト実行（または静的コード解析）、その後別経路で品質ゲート評価が実行される",
            "コードをプッシュ → 自動ビルド実行 → 品質ゲート評価",
            "コードをプッシュ → 自動ビルド実行 → 単体テスト実行 → 品質ゲート評価",
            "直接的なincludeパスは存在しない"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "設計意図",
        "question": "「パフォーマンステスト実行」が「ステージング環境デプロイ」に対してextend関係である設計意図として最も適切なものはどれですか？",
        "choice": [
            "パフォーマンステストはステージング環境で実行されることが多いが、全てのデプロイで必須ではなく、必要に応じて追加される機能だから",
            "パフォーマンステストは常に実行されるべき必須の処理だから",
            "パフォーマンステストはステージング環境デプロイの一部として統合されているから",
            "パフォーマンステストはデプロイ後に実行されるから"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "責任分離原則",
        "question": "開発者が「本番環境デプロイ」に直接アクセスできない設計になっている理由として最も適切なものはどれですか？",
        "choice": [
            "責任分離の原則に基づき、開発者による直接的な本番デプロイを防ぎ、承認プロセスを経由させることでリスクを低減するため",
            "開発者には本番環境の知識がないため",
            "開発者は技術的に本番デプロイを実行できないため",
            "開発者の権限管理を簡素化するため"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "テスト戦略分析",
        "question": "「統合テスト実行」が「単体テスト実行」をincludeし、「E2Eテスト実行」が「統合テスト実行」をincludeする設計から読み取れるテスト戦略はどれですか？",
        "choice": [
            "テストピラミッドに基づく階層的テスト戦略で、上位のテストは下位のテストが成功していることを前提とする",
            "全てのテストを並列実行して効率化する戦略",
            "E2Eテストのみを実行すれば十分という戦略",
            "各テストは独立して実行され、依存関係を持たない戦略"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "セキュリティアーキテクチャ",
        "question": "セキュリティ監査者が「デプロイ承認管理」「シークレット管理」「権限設定管理」の3つにアクセスできる設計から推測される、システムが採用しているセキュリティ原則はどれですか？",
        "choice": [
            "最小権限の原則とログ監査により、機密情報や重要な操作に対する独立した監視・承認レイヤーを設ける",
            "全てのセキュリティ機能を一元管理する集中管理原則",
            "セキュリティ監査者に全権限を与える管理者モデル",
            "開発者からセキュリティ責任を完全に分離する原則"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "デプロイ戦略比較",
        "question": "「カナリアデプロイ実行」と「ブルーグリーンデプロイ」が両方とも「本番環境デプロイ」をextendする設計になっている理由として最も適切なものはどれですか？",
        "choice": [
            "両者は基本的な本番デプロイの代替戦略であり、リスク管理の要件や状況に応じて選択的に使用されるため",
            "両者は本番デプロイの必須の前提条件だから",
            "両者は同時に実行される必要があるから",
            "両者は本番デプロイ後のロールバック手段だから"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "品質保証プロセス",
        "question": "QAエンジニアが「品質ゲート評価」と「デプロイ承認管理」の両方にアクセスできる設計から読み取れる、品質保証の役割はどれですか？",
        "choice": [
            "品質基準の評価だけでなく、その評価結果に基づいてデプロイの可否を判断する意思決定権限を持つ",
            "テストを実行するだけの実行者としての役割",
            "品質メトリクスを報告するだけの観察者としての役割",
            "全てのデプロイを最終承認する最高責任者としての役割"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "障害対応設計",
        "question": "「ロールバック実行」がKubernetesクラスタと直接連携し、かつDevOpsエンジニアのみがアクセスできる設計から推測される、障害対応における設計思想はどれですか？",
        "choice": [
            "障害発生時の迅速な対応のため、承認プロセスを省略し、インフラ知識を持つ専門家が即座にロールバックを実行できる体制",
            "障害時も通常のデプロイと同じ承認プロセスを経由する慎重な体制",
            "全てのアクターがロールバックを実行できる分散管理体制",
            "自動化されたロールバックにより人間の介入を最小化する体制"
        ],
        "authored_by": "human",
        "is_translated": false
    },
    {
        "tag": "影響分析",
        "question": "「自動ビルド実行」が「コードカバレッジ測定」をextendではなくincludeにした場合、CI/CDパイプラインにどのような影響が出ると考えられますか？",
        "choice": [
            "全てのビルドでカバレッジ測定が必須となり、パイプラインの実行時間が増加する",
            "パイプラインの実行速度が向上し、開発効率が上がる",
            "カバレッジ測定が実行されなくなり、品質が大幅に低下する",
            "ビルドとカバレッジ測定が並列実行され、効率と品質の一貫性が改善する"
        ],
        "authored_by": "human",
        "is_translated": false
    }
]